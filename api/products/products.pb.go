// Code generated by protoc-gen-go. DO NOT EDIT.
// source: products.proto

package products

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	SKU                  string           `protobuf:"bytes,1,opt,name=SKU,proto3" json:"SKU,omitempty"`
	EAN                  string           `protobuf:"bytes,2,opt,name=EAN,proto3" json:"EAN,omitempty"`
	Title                []*Product_Title `protobuf:"bytes,5,rep,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c6e54f42122eb82, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetSKU() string {
	if m != nil {
		return m.SKU
	}
	return ""
}

func (m *Product) GetEAN() string {
	if m != nil {
		return m.EAN
	}
	return ""
}

func (m *Product) GetTitle() []*Product_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

type Product_Title struct {
	Text                 string   `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	LanguageCode         string   `protobuf:"bytes,4,opt,name=LanguageCode,proto3" json:"LanguageCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product_Title) Reset()         { *m = Product_Title{} }
func (m *Product_Title) String() string { return proto.CompactTextString(m) }
func (*Product_Title) ProtoMessage()    {}
func (*Product_Title) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c6e54f42122eb82, []int{0, 0}
}

func (m *Product_Title) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product_Title.Unmarshal(m, b)
}
func (m *Product_Title) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product_Title.Marshal(b, m, deterministic)
}
func (m *Product_Title) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product_Title.Merge(m, src)
}
func (m *Product_Title) XXX_Size() int {
	return xxx_messageInfo_Product_Title.Size(m)
}
func (m *Product_Title) XXX_DiscardUnknown() {
	xxx_messageInfo_Product_Title.DiscardUnknown(m)
}

var xxx_messageInfo_Product_Title proto.InternalMessageInfo

func (m *Product_Title) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Product_Title) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func init() {
	proto.RegisterType((*Product)(nil), "products.Product")
	proto.RegisterType((*Product_Title)(nil), "products.Product.Title")
}

func init() { proto.RegisterFile("products.proto", fileDescriptor_8c6e54f42122eb82) }

var fileDescriptor_8c6e54f42122eb82 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x4f,
	0x29, 0x4d, 0x2e, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xe6,
	0x32, 0x72, 0xb1, 0x07, 0x40, 0x38, 0x42, 0x02, 0x5c, 0xcc, 0xc1, 0xde, 0xa1, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x20, 0x26, 0x48, 0xc4, 0xd5, 0xd1, 0x4f, 0x82, 0x09, 0x22, 0xe2, 0xea,
	0xe8, 0x27, 0xa4, 0xcb, 0xc5, 0x5a, 0x92, 0x59, 0x92, 0x93, 0x2a, 0xc1, 0xaa, 0xc0, 0xac, 0xc1,
	0x6d, 0x24, 0xae, 0x07, 0x37, 0x19, 0x6a, 0x8a, 0x5e, 0x08, 0x48, 0x3a, 0x08, 0xa2, 0x4a, 0xca,
	0x9e, 0x8b, 0x15, 0xcc, 0x17, 0x12, 0xe2, 0x62, 0x09, 0x49, 0xad, 0x28, 0x91, 0x60, 0x06, 0x1b,
	0x05, 0x66, 0x0b, 0x29, 0x71, 0xf1, 0xf8, 0x24, 0xe6, 0xa5, 0x97, 0x26, 0xa6, 0xa7, 0x3a, 0xe7,
	0xa7, 0xa4, 0x4a, 0xb0, 0x80, 0xe5, 0x50, 0xc4, 0x92, 0xd8, 0xc0, 0x0e, 0x36, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x35, 0xf8, 0xdd, 0x5e, 0xc2, 0x00, 0x00, 0x00,
}
